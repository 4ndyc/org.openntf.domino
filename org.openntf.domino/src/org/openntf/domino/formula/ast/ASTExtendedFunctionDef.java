/* Generated By:JJTree: Do not edit this line. ASTExtendedFunctionDef.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.openntf.domino.formula.ast;

import java.util.Set;

import org.openntf.domino.formula.FormulaContext;
import org.openntf.domino.formula.FormulaReturnException;
import org.openntf.domino.formula.ValueHolder;
import org.openntf.domino.formula.impl.ExtendedFunction;
import org.openntf.domino.formula.parse.AtFormulaParserImpl;
import org.openntf.domino.formula.parse.ParseException;

public class ASTExtendedFunctionDef extends SimpleNode {
	private ExtendedFunction function;
	private String functionName;

	public ASTExtendedFunctionDef(final AtFormulaParserImpl p, final int id) {
		super(p, id);
	}

	public void toFormula(final StringBuilder sb) {
		// TODO Auto-generated method stub

	}

	@Override
	public ValueHolder evaluate(final FormulaContext ctx) throws FormulaReturnException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected void analyzeThis(final Set<String> readFields, final Set<String> modifiedFields, final Set<String> variables,
			final Set<String> functions) {
		// TODO Auto-generated method stub

	}

	public void init(final String image) throws ParseException {
		functionName = image;

		int functionParameters = 0;
		if (children != null) {
			functionParameters = children.length;
		}

		ASTExtendedParameter[] parameter = new ASTExtendedParameter[functionParameters];

		for (int i = 0; i < functionParameters; i++) {
			parameter[i] = (ASTExtendedParameter) children[i];
		}

		function = new ExtendedFunction(functionName, parameter, parser);
		System.out.println("FunctionName is " + functionName);
		parser.declareFunction(function);
	}

	public ExtendedFunction getFunction() {
		return function;
	}

}
/* JavaCC - OriginalChecksum=86319f51daca78a3278949edfabdcd39 (do not edit this line) */
