/* Generated By:JJTree: Do not edit this line. ASTSubscript.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.openntf.domino.tests.rpr.formula.parse;

import org.openntf.domino.tests.rpr.formula.eval.FormulaContext;
import org.openntf.domino.tests.rpr.formula.eval.Value;

public class ASTSubscript extends SimpleNode {
	public ASTSubscript(final int id) {
		super(id);
	}

	public ASTSubscript(final AtFormulaParser p, final int id) {
		super(p, id);
	}

	@Override
	public Value evaluate(final FormulaContext ctx) {

		Value base = jjtGetChild(0).evaluate(ctx);

		Value subscript = jjtGetChild(1).evaluate(ctx);

		int idx = subscript.getInt(0);
		if (idx < 1 || idx > base.size()) {
			throw new IndexOutOfBoundsException("Index " + idx + " not in 1.." + base.size());
		}
		return new Value(base.get(idx - 1)); // Formula is 1 based
	}

}
/* JavaCC - OriginalChecksum=e9a1a8f4d76f4b0010da11d0363437fb (do not edit this line) */
