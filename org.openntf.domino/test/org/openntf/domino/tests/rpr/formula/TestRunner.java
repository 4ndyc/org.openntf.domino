/* Generated By:JJTree&JavaCC: Do not edit this line. AtFormulaParser.java */
package org.openntf.domino.tests.rpr.formula;

import java.util.List;

import lotus.domino.NotesException;
import lotus.domino.Session;

import org.openntf.domino.impl.Base;
import org.openntf.domino.tests.rpr.formula.eval.DefaultOperators;
import org.openntf.domino.tests.rpr.formula.eval.FormulaContext;
import org.openntf.domino.tests.rpr.formula.parse.AtFormulaParser;
import org.openntf.domino.tests.rpr.formula.parse.ParseException;
import org.openntf.domino.tests.rpr.formula.parse.SimpleNode;
import org.openntf.domino.thread.DominoThread;
import org.openntf.domino.utils.Factory;

public class TestRunner implements Runnable {
	public static void main(final String[] args) {
		DominoThread thread = new DominoThread(new TestRunner(), "My thread");
		thread.start();
	}

	public TestRunner() {
		// whatever you might want to do in your constructor, but stay away from Domino objects
	}

	@Override
	public void run() {
		try {
			System.out.println("Please type a Lotus domino @formula. Quit with CTRL+Z:");
			SimpleNode n = null;
			List<Object> v = null;

			System.out.println("Parsing....");
			long time = System.currentTimeMillis();

			//String str = "x:=1:2*+32:64:1;x**x**x**x";
			//String str = "@Transform((1:2:3)*+(0:3:6:9);{x};x*x)";
			String str = "\"ab\\n\\x\\\"xyzz\"";
			System.out.println(str);
			AtFormulaParser parser = null;
			for (int i = 1; i < 10000; i++) {
				java.io.StringReader sr = new java.io.StringReader(str);
				//java.io.Reader r = new java.io.BufferedReader(sr);
				if (parser == null) {
					parser = new AtFormulaParser(sr);
					parser.init(new DominoFormatter(), new DefaultOperators());
				} else {
					parser.ReInit(sr);
				}
				n = parser.Parse();
			}
			time = System.currentTimeMillis() - time;
			System.out.println("... took " + time + "ms.");
			//	n.dump("");

			System.out.println("Evaluating");

			time = System.currentTimeMillis();
			for (int i = 1; i < 10000; i++) {
				FormulaContext ctx = new FormulaContext();
				v = n.evaluate(ctx);
			}
			time = System.currentTimeMillis() - time;
			System.out.println("... took " + time + "ms.");

			System.out.println("NTF:\t" + v);

			System.out.println("Notes...");
			Session sess = Base.toLotus(Factory.getSession());
			long startEvaluate = System.currentTimeMillis();
			try {
				time = System.currentTimeMillis();
				for (int i = 1; i < 10000; i++) {
					v = sess.evaluate(str);
				}
				time = System.currentTimeMillis() - time;
				System.out.println("... took " + time + "ms.");
				System.out.println("Domino:\t" + v);

			} catch (NotesException e) {
				e.printStackTrace();
			}

			System.out.println("Thank you.");
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Factory.terminate();
		System.out.println(Factory.dumpCounters(true));
	}

}
