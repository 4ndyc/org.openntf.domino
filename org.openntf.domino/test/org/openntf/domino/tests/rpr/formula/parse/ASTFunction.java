/* Generated By:JJTree: Do not edit this line. ASTFunction.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.openntf.domino.tests.rpr.formula.parse;

import org.openntf.domino.tests.rpr.formula.eval.AtFunction;
import org.openntf.domino.tests.rpr.formula.eval.FormulaContext;
import org.openntf.domino.tests.rpr.formula.eval.Value;

public class ASTFunction extends SimpleNode {
	private AtFunction function;

	public ASTFunction(final int id) {
		super(id);
	}

	public ASTFunction(final AtFormulaParser p, final int id) {
		super(p, id);
	}

	public void setFunction(final String string) {
		function = parser.getFunction(string);
		if (function == null) {
			throw new IllegalArgumentException("'" + string + "' is not a function");
		}
	}

	/* (non-Javadoc)
	 * @see org.openntf.domino.tests.rpr.formula.SimpleNode#toString()
	 */
	@Override
	public String toString() {
		return super.toString() + ": " + function;
	}

	@Override
	public Value evaluate(final FormulaContext ctx) {
		// TODO Auto-generated method stub
		if (jjtGetNumChildren() == 0) {
			return function.evaluate(ctx, null);
		}
		Value params[] = new Value[jjtGetNumChildren()];
		for (int i = 0; i < jjtGetNumChildren(); i++) {
			params[i] = jjtGetChild(i).evaluate(ctx);
		}
		return function.evaluate(ctx, params);
	}

}
/* JavaCC - OriginalChecksum=ee60ee3554e18a77803b11d6b865e78e (do not edit this line) */
